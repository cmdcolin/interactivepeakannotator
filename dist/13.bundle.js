(function(){
(this||window)["webpackJsonp"].registerAbsMids({
	"JBrowse/View/Export":"./src/JBrowse/View/Export.js",
	"JBrowse/View/Export/GFF3":"./src/JBrowse/View/Export/GFF3.js"
	// undefined = 0
	// undefined = 1
})
})(),(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[13],{

/***/ "./src/JBrowse/View/Export.js":
/*!************************************!*\
  !*** ./src/JBrowse/View/Export.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (declare, lang, array) {\n\n    return declare(null, {\n        /**\n         * Data export driver base class.\n         * @constructs\n         */\n        constructor: function constructor(args) {\n            args = args || {};\n            this.printFunc = args.print || function (line) {\n                this.output += line;\n            };\n            this.refSeq = args.refSeq;\n            this.output = '';\n            this.track = args.track;\n            this.store = args.store;\n        },\n\n        // will need to override this if you're not exporting regular features\n        exportRegion: function exportRegion(region, callback) {\n            var output = '';\n            this.store.getFeatures(region, dojo.hitch(this, 'writeFeature'), dojo.hitch(this, function () {\n                callback(this.output);\n            }), dojo.hitch(this, function (error) {\n                console.error(error);\n            }));\n        },\n\n        print: function print(l) {\n            if (lang.isArray(l)) {\n                array.forEach(l, this.printFunc, this);\n            } else {\n                this.printFunc(l);\n            }\n        },\n\n        /**\n         * Write the feature to the GFF3 under construction.\n         * @returns nothing\n         */\n        writeFeature: function writeFeature(feature) {\n            this.print(this.formatFeature(feature));\n        }\n    });\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack:///./src/JBrowse/View/Export.js?");

/***/ }),

/***/ "./src/JBrowse/View/Export/GFF3.js":
/*!*****************************************!*\
  !*** ./src/JBrowse/View/Export/GFF3.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _gff = __webpack_require__(/*! @gmod/gff */ \"./node_modules/@gmod/gff/dist/index.js\");\n\nvar _gff2 = _interopRequireDefault(_gff);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! JBrowse/View/Export */ \"./src/JBrowse/View/Export.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (declare, lang, array, ExportBase) {\n\n    return declare(ExportBase,\n    /**\n     * @lends JBrowse.View.Export.GFF3.prototype\n     */\n    {\n\n        /**\n         * Data export driver for GFF3 format.\n         * @constructs\n         */\n        constructor: function constructor(args) {\n            this._idCounter = 0;\n            this.lastSync = 0;\n        },\n\n        gff3_field_names: ['seq_id', 'source', 'type', 'start', 'end', 'score', 'strand', 'phase', 'attributes'],\n\n        gff3_reserved_attributes: ['ID', 'Name', 'Alias', 'Parent', 'Target', 'Gap', 'Derives_from', 'Note', 'Dbxref', 'Ontology_term', 'Is_circular'],\n\n        /**\n         * @returns false if the field goes in tabular portion of gff3, true otherwise\n         * @private\n         */\n        _is_not_gff3_tab_field: function _is_not_gff3_tab_field(fieldname) {\n            if (!this._gff3_fields_by_name) {\n                var fields = {};\n                dojo.forEach(this.gff3_field_names, function (f) {\n                    fields[f] = true;\n                });\n                this._gff3_fields_by_name = fields;\n            }\n\n            return !this._gff3_fields_by_name[fieldname.toLowerCase()];\n        },\n\n        /**\n         * @returns the capitalized attribute name if the given field name\n         * corresponds to a GFF3 reserved attribute\n         * @private\n         */\n        _gff3_reserved_attribute: function _gff3_reserved_attribute(fieldname) {\n            if (!this._gff3_reserved_attributes_by_lcname) {\n                var fields = {};\n                dojo.forEach(this.gff3_reserved_attributes, function (f) {\n                    fields[f.toLowerCase()] = f;\n                });\n                this._gff3_reserved_attributes_by_lcname = fields;\n            }\n\n            return this._gff3_reserved_attributes_by_lcname[fieldname.toLowerCase()];\n        },\n\n        exportRegion: function exportRegion(region, callback) {\n            this.print(\"##gff-version 3\\n\");\n            this.print('##sequence-region ' + region.ref + ' ' + (region.start + 1) + ' ' + region.end + '\\n');\n            this.inherited(arguments);\n        },\n\n\n        /**\n         * Format a feature into a string.\n         * @param {Object} feature feature object (like those returned from JBrowse/Store/SeqFeature/*)\n         * @returns {String} GFF3 string representation of the feature\n         */\n        formatFeature: function formatFeature(feature, parentID) {\n            var fields = dojo.map([feature.get('seq_id') || this.refSeq.name].concat(dojo.map(this.gff3_field_names.slice(1, 8), function (field) {\n                return feature.get(field);\n            }, this)), function (data) {\n                var dt = typeof data === 'undefined' ? 'undefined' : _typeof(data);\n                return _gff2.default.util.escapeColumn(dt == 'string' || dt == 'number' ? data : '.');\n            }, this);\n\n            // convert back from interbase\n            if (typeof parseInt(fields[3]) == 'number') fields[3]++;\n            // normalize the strand field\n            fields[6] = { '1': '+', '-1': '-', '0': '.' }[fields[6]] || fields[6];\n\n            // format the attributes\n            var attr = this._gff3_attributes(feature);\n            if (parentID) attr.Parent = parentID;else delete attr.Parent;\n\n            var subfeatures = array.map(feature.get('subfeatures') || [], function (feat) {\n                if (!attr.ID) {\n                    attr.ID = ++this._idCounter;\n                }\n                return this.formatFeature(feat, attr.ID);\n            }, this);\n\n            // need to format the attrs after doing the subfeatures,\n            // because the subfeature formatting might have autocreated an\n            // ID for the parent\n            fields[8] = this._gff3_format_attributes(attr);\n\n            var fl = fields.join(\"\\t\") + \"\\n\";\n            subfeatures.unshift(fl);\n            return subfeatures.join('');\n        },\n\n        /**\n         * Write the feature to the GFF3 under construction.\n         * @returns nothing\n         */\n        writeFeature: function writeFeature(feature) {\n            var fmt = this.formatFeature(feature);\n            this.print(fmt);\n\n            // avoid printing sync marks more than every 10 lines\n            if (this.lastSync >= 9) {\n                this.lastSync = 0;\n                this.print(\"###\\n\");\n            } else {\n                this.lastSync += fmt.length || 1;\n            }\n        },\n\n        /**\n         * Extract a key-value object of gff3 attributes from the given\n         * feature.  Attribute names will have proper capitalization.\n         * @private\n         */\n        _gff3_attributes: function _gff3_attributes(feature) {\n            var tags = array.filter(feature.tags(), dojo.hitch(this, function (f) {\n                f = f.toLowerCase();\n                return this._is_not_gff3_tab_field(f) && f != 'subfeatures';\n            }));\n            var attrs = {};\n            array.forEach(tags, function (tag) {\n                var val = feature.get(tag);\n                var valtype = typeof val === 'undefined' ? 'undefined' : _typeof(val);\n                if (valtype == 'boolean') val = val ? 1 : 0;else if (valtype == 'undefined') return;\n                tag = this._gff3_reserved_attribute(tag) || this._ensure_non_reserved(tag);\n                attrs[tag] = val;\n            }, this);\n            return attrs;\n        },\n\n        // ensure that an attribute name is not reserved.  currently does\n        // this by adding a leading underscore to attribute names that\n        // have initial capital letters.\n        _ensure_non_reserved: function _ensure_non_reserved(str) {\n            return str.replace(/^[A-Z]/, function () {\n                return '_' + str[0];\n            });\n        },\n\n        /**\n         * @private\n         * @returns {String} formatted attribute string\n         */\n        _gff3_format_attributes: function _gff3_format_attributes(attrs) {\n            var attrOrder = [];\n            for (var tag in attrs) {\n                var val = attrs[tag];\n                if (!val) {\n                    continue;\n                }\n\n                var valstring = val.hasOwnProperty('toString') ? _gff2.default.util.escape(val.toString()) : val instanceof Array ? array.map(val, function (s) {\n                    return _gff2.default.util.escape(s);\n                }).join(',') : val instanceof Object ? _gff2.default.util.escape(JSON.stringify(val)) : val.values ? val instanceof Array ? array.map(val, function (s) {\n                    return _gff2.default.util.escape(s);\n                }).join(',') : _gff2.default.util.escape(val) : _gff2.default.util.escape(val);\n                attrOrder.push(_gff2.default.util.escape(tag) + '=' + valstring);\n            }\n            return attrOrder.join(';') || '.';\n        }\n    });\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack:///./src/JBrowse/View/Export/GFF3.js?");

/***/ }),

/***/ 0:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///util_(ignored)?");

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///util_(ignored)?");

/***/ })

}]);